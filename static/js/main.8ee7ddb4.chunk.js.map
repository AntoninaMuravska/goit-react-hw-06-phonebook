{"version":3,"sources":["components/Filter/Filter.module.css","components/Container/Container.module.css","components/redux/contacts/contacts-actions.js","components/redux/contacts/contacts-reducer.js","components/redux/store.js","components/Container/Container.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/ContactForm/ContactForm.js","components/Contacts/Contacts.js","App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","items","createReducer","actions","state","filter","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","persistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactsReducer","devTools","process","persistor","persistStore","Container","children","className","s","container","getVisibleContacts","normalizedFilter","toLowerCase","contact","includes","connect","dispatch","onDeleteContact","list","map","item","type","button","onClick","Filter","label","span","input","value","onChange","e","target","protoType","PropTypes","string","func","ContactForm","nameInputId","numberInputId","handleInputChange","currentTarget","setState","handleSubmit","preventDefault","props","onSubmit","resetForm","form","this","htmlFor","pattern","title","required","btnSubmit","Component","data","Contacts","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.8ee7ddb4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__Dv_mH\",\"input\":\"Filter_input__1e0f6\",\"span\":\"Filter_span__vEJKD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__V-9Z6\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst addContact = createAction('contacts/ADD', ({ name, number }) => ({\r\n  payload: {\r\n    id: uuidv4(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\n\r\nconst deleteContact = createAction('contacts/DELETE');\r\nconst changeFilter = createAction('contacts/FILTER');\r\n\r\nexport default { addContact, deleteContact, changeFilter };\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [actions.addContact]: (state, { payload }) => [...state, payload],\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\n\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport logger from 'redux-logger';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst persistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(persistConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import s from './Container.module.css';\n\nconst Container = ({ children }) => {\n  return <div className={s.container}>{children}</div>;\n};\n\nexport default Container;\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport actions from '../redux/contacts/contacts-actions';\n\nimport s from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <ul className={s.list}>\n    {contacts.map(({ id, name, number }) => (\n      <li key={id} className={s.item}>\n        <p className={s.name}>{name}</p>\n        <p className={s.number}>{number}</p>\n        <button\n          type=\"button\"\n          className={s.button}\n          onClick={() => onDeleteContact(id)}\n        >\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nconst getVisibleContacts = (contacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contacts: getVisibleContacts(items, filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(actions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.shape),\n  onDelete: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport actions from '../redux/contacts/contacts-actions';\n\nimport s from './Filter.module.css';\n\nconst Filter = ({ filter, changeFilter }) => {\n  return (\n    <label className={s.label}>\n      <span className={s.span}>Find contacts by name</span>\n      <input\n        type=\"text\"\n        className={s.input}\n        value={filter}\n        onChange={changeFilter}\n      />\n    </label>\n  );\n};\n\nconst mapStateToProps = state => ({\n  filter: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeFilter: e => dispatch(actions.changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n\nFilter.protoType = {\n  filter: PropTypes.string,\n  changeFilter: PropTypes.func,\n};\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { connect } from 'react-redux';\nimport actions from '../redux/contacts/contacts-actions';\n\nimport s from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  nameInputId = uuidv4();\n  numberInputId = uuidv4();\n\n  handleInputChange = e => {\n    // console.log(e.currentTarget.value);\n    // console.log(e.currentTarget.name);\n    const { name, value } = e.currentTarget;\n\n    this.setState({ [name]: value });\n    // console.log(this.state);\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state);\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <form className={s.form} onSubmit={this.handleSubmit}>\n          <label className={s.label} htmlFor={this.nameInputId}>\n            Name\n          </label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            id={this.nameInputId}\n            value={this.state.name}\n            onChange={this.handleInputChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            className={s.input}\n            required\n          />\n\n          <label className={s.label} htmlFor={this.numberInputId}>\n            Number\n          </label>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            id={this.numberInputId}\n            value={this.state.number}\n            onChange={this.handleInputChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            className={s.input}\n            required\n          />\n\n          <button type=\"submit\" className={s.btnSubmit}>\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: data => dispatch(actions.addContact(data)),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import ContactList from '../ContactList';\r\nimport Filter from '../Filter';\r\nimport ContactForm from '../ContactForm';\r\n\r\nfunction Contacts() {\r\n  return (\r\n    <>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n      {/* {items.length > 0 && ( */}\r\n      <>\r\n        <h2>Contacts</h2>\r\n        <Filter />\r\n        <ContactList />\r\n      </>\r\n      {/* )} */}\r\n    </>\r\n  );\r\n}\r\nexport default Contacts;\r\n","import { Component } from 'react';\nimport Container from './components/Container';\nimport Contacts from './components/Contacts';\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Container>\n          <Contacts />\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './components/redux/store';\nimport './index.css';\nimport App from './App';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__IEDCx\",\"label\":\"ContactForm_label__3-oaQ\",\"input\":\"ContactForm_input__2hH7y\",\"btnSubmit\":\"ContactForm_btnSubmit__2oFqM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__JX78n\",\"item\":\"ContactList_item__2WVtu\",\"name\":\"ContactList_name__2b1Ja\",\"number\":\"ContactList_number__NFl9a\",\"button\":\"ContactList_button__3PIdS\"};"],"sourceRoot":""}